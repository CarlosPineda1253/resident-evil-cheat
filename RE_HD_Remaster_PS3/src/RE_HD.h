/*
 * RE4_cheat.h
 *
 *  Created on: Mar 21, 2023
 *      Author: car_1
 */

#ifndef RE_2R_CHEAT_H_
#define RE_2R_CHEAT_H_

#include <windows.h>
#include <tchar.h>
#include <Psapi.h>
#include <iostream>
#include <vector>
#include <algorithm>
#include <iterator>
#include <string>
#include <thread>
#include <winbase.h>
#include <basetsd.h>

//Health
//00 00 00 00 00 00 00 01 00 00 00 01 01 01 00 01 AF F7 8B 4F 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 AA C1 38 FF FF FF FF 00 00 FF FF CF 9E 35 37 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 AA C1 38 FF FF FF FF 00 00 FF FF 7A 8C C8 63 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 AA C1 38 FF FF FF FF 00 00 FF FF 7D 16 DF 52 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 AA C1 38 FF FF FF FF 00 00 FF FF E3 5F C3 A8 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 AA C1 38 FF FF FF FF 00 00 FF FF B4 0F BF E7 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 AA C1 38 FF FF FF FF 00 00 FF FF C9 E7 73 7E 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 AA C1 38 FF FF FF FF 00 00 FF FF 6F D4 7A 9F 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 AA C1 38 FF FF FF FF 00 00 FF FF 35 61 7D 4A 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 44 7A 00 00 32 86 92 40 68 77 B5 CF 80 00 00 02 00 00 00 00 80 00 00 02 00 00
//0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x01, 0xAF, 0xF7, 0x8B, 0x4F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xAA, 0xC1, 0x38, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xCF, 0x9E, 0x35, 0x37, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xAA, 0xC1, 0x38, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x7A, 0x8C, 0xC8, 0x63, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xAA, 0xC1, 0x38, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x7D, 0x16, 0xDF, 0x52, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xAA, 0xC1, 0x38, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xE3, 0x5F, 0xC3, 0xA8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xAA, 0xC1, 0x38, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xB4, 0x0F, 0xBF, 0xE7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xAA, 0xC1, 0x38, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xC9, 0xE7, 0x73, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xAA, 0xC1, 0x38, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x6F, 0xD4, 0x7A, 0x9F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xAA, 0xC1, 0x38, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x35, 0x61, 0x7D, 0x4A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x7A, 0x00, 0x00, 0x32, 0x86, 0x92, 0x40, 0x68, 0x77, 0xB5, 0xCF, 0x80, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x02, 0x00, 0x00
#define Bytes_offset_health 322

//Inventory
//00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 31 E4 4E D0 31 D5 FD A0 80 00 E4 82 82 00 00 02 00 00 00 00 00 00 00 00 00 00 00 00 31 D6 06 B0 00 00 00 00 00 00 00 00 31 D5 FD D0 31 E4 4F 00 00 00 00 00 00 00 00 00 80 00 E4 7F 42 00 00 02 00 0E 47 A0 00 00 00 30 00 AB 19 C0 00 00 00 00 FF FF FF FF 00 00 00 00 00 00 00 12 00 00 00 00 95 02 E3 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 20 00 00 00 00 00 00 00 00 00 00 00 03 00 00 00 0F 00 00 00 01 00 00 00 01 00 00 00 44 00 00 00 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
//0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x31, 0xE4, 0x4E, 0xD0, 0x31, 0xD5, 0xFD, 0xA0, 0x80, 0x00, 0xE4, 0x82, 0x82, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x31, 0xD6, 0x06, 0xB0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x31, 0xD5, 0xFD, 0xD0, 0x31, 0xE4, 0x4F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0xE4, 0x7F, 0x42, 0x00, 0x00, 0x02, 0x00, 0x0E, 0x47, 0xA0, 0x00, 0x00, 0x00, 0x30, 0x00, 0xAB, 0x19, 0xC0, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x00, 0x95, 0x02, 0xE3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
#define Bytes_offset_inventory 152

#define Instructions_Number 6
#define Size_Buff_Items 4034

class Addr_Info{
	public:
		unsigned long long Addr;
		unsigned long long Addr_Find;
		unsigned long long Index;
};

typedef struct item_struct{
	UINT32 item;
	UINT32 cantidad;
};

#define Inventory_Bytes 64
#define Number_items 8
#define Inventory_Size_Array 185

#define first_aid_spray_box 0x65
#define first_aid_spray 0x21
#define green_herb 0x22
#define Blue_Herb 0x24
#define Red_Herb 0x23
#define handgun 0x03
#define Shotgun 0x06
#define Magnum 0x0B
#define G_Laucher_Grenade 0x07
#define Rocket_Launcher 0x0A

unsigned long PrintProcessNameAndID(unsigned long processID);
Addr_Info Search_Memory(unsigned long processID, std::vector<unsigned char> to_find, int count_to_find);
void write_ammo (void* ptr, Addr_Info ptr2);
void write_healt (void* ptr, Addr_Info ptr2);
int main(void);

#endif /* RE2R_CHEAT_H_ */
